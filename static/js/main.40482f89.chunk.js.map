{"version":3,"sources":["api/api.tsx","components/Card.tsx","components/ArticleList.tsx","theme.ts","App.tsx","index.tsx"],"names":["requestArticles","a","fetch","response","ok","Error","status","statusText","json","BasicCard","props","article","title","publishedAt","imageUrl","summary","Card","sx","minWidth","CardMedia","component","height","image","alt","mb","CardContent","Typography","opacity","fontFamily","Icon","pr","variant","CardActions","Button","fontWeight","color","href","size","ArticleList","articles","Box","display","gridTemplateColumns","gap","map","theme","createTheme","danger","palette","primary","main","neutral","App","useState","setArticles","search","setSearch","updateArticles","useCallback","articlesFromServer","useEffect","className","GlobalStyles","styles","body","ThemeProvider","htmlFor","type","id","placeholder","value","onChange","event","target","length","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40482f89.chunk.js","sourcesContent":["const base_url = 'https://api.spaceflightnewsapi.net/v3';\n\nexport const requestArticles = async () => {\n  const response = await fetch(`${base_url}/articles`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n}","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CalendarTodayOutlinedIcon from '@mui/icons-material/CalendarTodayOutlined';\nimport { Article } from '../types/types';\nimport Icon from '@mui/material/Icon';\n\ninterface Props {\n  article: Article;\n}\n\nexport const BasicCard: React.FC<Props> = (props) => {\n  const { title, publishedAt, imageUrl, summary } = props.article;\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n        <CardMedia\n          component=\"img\"\n          height=\"217\"\n          image={imageUrl}\n          alt={title}\n          sx={{ mb: 1 }}\n        />\n      <CardContent>\n        <Typography sx={{ mb: 1.5, opacity: 0.6, fontFamily: \"Montserrat\" }}>\n        <Icon sx={{ pr: 0.5 }} aria-label=\"CalendarTodayOutlined\">\n          <CalendarTodayOutlinedIcon />\n        </Icon>\n          {publishedAt}\n        </Typography>\n\n        <Typography sx={{ mb: 2.5, fontFamily: \"Montserrat\" }} variant=\"h5\" component=\"div\">\n          {title}\n        </Typography>\n\n        <Typography sx={{ fontFamily: \"Montserrat\" }} variant=\"body1\">\n          {summary}\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        <Button\n          sx={{ fontFamily: \"Montserrat\", fontWeight: \"bold\" }}\n          color=\"primary\"\n          href=\"#readmore\"\n          size=\"small\"\n        >\n          Read more\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import Box from '@mui/material/Box';\nimport React from 'react';\nimport { Article } from '../types/types';\nimport { BasicCard } from './Card';\n\ninterface Props {\n  articles: Article[];\n}\n\nexport const ArticleList: React.FC<Props> = (props) => {\n  const { articles } = props;\n\n  return (\n    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '45px' }}>\n      {articles.map(article => (\n        <BasicCard article={article} />\n      ))}\n    </Box>\n  );\n}","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n  status: {\n    danger: '#e53e3e',\n  },\n  palette: {\n    primary: {\n      main: '#363636',\n    },\n    neutral: {\n      main: '#eaeaea',\n    }\n  },\n});\n","import { ThemeProvider } from '@mui/material/styles';\nimport React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport { requestArticles } from './api/api';\nimport './App.scss';\nimport { ArticleList } from './components/ArticleList';\nimport { Article } from './types/types';\nimport { theme } from './theme';\nimport GlobalStyles from '@mui/material/GlobalStyles';\n\nconst App: React.FC = () => {\n  const [articles, setArticles] = useState([]);\n  const [search, setSearch] = useState('');\n  \n  const updateArticles = useCallback(async () => {\n    const articlesFromServer = await requestArticles();\n    \n    setArticles(articlesFromServer);\n  }, []);\n  \n  useEffect(() => {\n    updateArticles();\n  }, [updateArticles]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n  \n    setSearch(value);\n  }\n\n  const articlesFilter = () => {\n     return articles.filter((article: Article) =>\n      article.title.toLowerCase().includes(search.toLowerCase())\n      || article.summary.toLowerCase().includes(search.toLowerCase()));\n  }\n\n  return (\n    <div className=\"App\">\n      <GlobalStyles\n        styles={{\n          body: { fontFamily: 'Montserrat' }\n        }}\n      />\n      <ThemeProvider theme={theme}>\n        <header className=\"App-header\">\n          <div className=\"search-bar\">\n            <label htmlFor=\"search-bar__area\">\n              <p className=\"search-bar__title\">\n                Filter by keywords\n              </p>\n\n              <input\n                type=\"text\"\n                className=\"search-bar__area\"\n                id=\"search-bar__area\"\n                placeholder=\"The most successful IT companies in 2020\"\n                value={search}\n                onChange={handleChange}\n              />\n            </label>\n          </div>\n        </header>\n        <main className=\"App-main\">\n          <p className=\"section__title\">Results: {articles.length}</p>\n          {articles.length && <ArticleList articles={articlesFilter()} />}\n        </main>\n        </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}